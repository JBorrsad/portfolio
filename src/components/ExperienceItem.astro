---
import LinkInline from "./LinkInline.astro"

interface Props {
  title: string
  company: string
  subtitle?: string
  description: string | Array<string | {text: string, link?: string}>
  link?: string
  date: string
  year: string
}

const { title, company, subtitle, description, link, date, year } = Astro.props
const isArray = Array.isArray(description)

// Procesar título para separar el texto entre paréntesis
const titleParts = title.match(/^(.+?)(\([^)]+\))$/)
const mainTitle = titleParts ? titleParts[1].trim() : title
const ectsText = titleParts ? titleParts[2] : null

// Procesar items con links
let htmlContent = '';
if (isArray) {
  const items = description as Array<string | {text: string, link?: string}>;
  htmlContent = items.map(item => {
    if (typeof item === 'string') {
      return `<li>${item}</li>`;
    } else {
      const text = item.text.replace(
        /(aquí|aqui)/gi,
        `<a href="${item.link}" class="text-yellow-400 hover:underline font-semibold">$1</a>`
      );
      return `<li>${text}</li>`;
    }
  }).join('');
}
---

<div
  class="relative ml-32 mr-4 pb-12 grid before:absolute before:left-[-35px] before:block before:h-full before:border-l-2 before:border-black/20 dark:before:border-white/15 before:content-[''] md:ml-24 md:mr-12 md:grid-cols-5 md:gap-10 md:space-x-4]"
>
  <div class="relative pb-12 md:col-span-2">
    <div class="sticky top-0">
      <span class="text-yellow-400 -left-[42px] absolute text-5xl leading-none top-[-14px]"
        >&bull;</span
      >
      <span class="text-gray-800 dark:text-white -left-[120px] absolute text-2xl font-bold md:-left-[105px] leading-none top-[-2px]"
        >{year}</span
      >

      <h3 class="text-xl font-bold text-yellow-400 leading-none top-0 relative">
        {mainTitle}
        {ectsText && <span class="block text-gray-500 dark:text-gray-400 font-normal text-base mt-1">{ectsText}</span>}
      </h3>
      {subtitle && <p class="text-sm text-gray-600 dark:text-gray-400 mt-1" style="font-size: 14px; font-weight: normal;">{subtitle}</p>}
    </div>
  </div>
  <div class="relative flex flex-col gap-2 pb-4 text-gray-600 dark:text-gray-300 md:col-span-3">
    {isArray ? (
      <ul class="list-disc list-inside space-y-1" set:html={htmlContent} />
    ) : (
      <p>{description}</p>
    )}
    {
      link && (
        <LinkInline href={link}>
          Saber más{" "}
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="w-5 icon icon-tabler icon-tabler-chevron-right"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            stroke-width="2"
            stroke="currentColor"
            fill="none"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <>
              <path stroke="none" d="M0 0h24v24H0z" fill="none" />
              <path d="M9 6l6 6l-6 6" />
            </>
          </svg>
        </LinkInline>
      )
    }
  </div>
</div>
